kind: ConfigMap
apiVersion: v1
metadata:
  name: mockserver-config
data:
  initializerJson.json: |-
    [
      {
        "httpRequest": {
          "path": "/api/v1/query",
          "method": "POST"
        },
        "httpResponse": {
          "body": {
            "status": "success",
            "data": {
              "resultType": "vector",
              "result": [
                {
                  "metric": {
                    "__name__": "metric-name",
                    "job": "",
                    "instance": ""
                  },
                  "value": [1669714193.275, "4"]
                }
              ]
            }
          },
          "statusCode": 200
        }
      }
    ]
  mockserver.properties: |-
    ###############################
    # MockServer & Proxy Settings #
    ###############################
    # Socket & Port Settings
    # socket timeout in milliseconds (default 120000)
    mockserver.maxSocketTimeout=120000
    # Certificate Generation
    # dynamically generated CA key pair (if they don't already exist in
    specified directory)
    mockserver.dynamicallyCreateCertificateAuthorityCertificate=true
    # save dynamically generated CA key pair in working directory
    mockserver.directoryToSaveDynamicSSLCertificate=.
    # certificate domain name (default "localhost")
    mockserver.sslCertificateDomainName=localhost
    # comma separated list of ip addresses for Subject Alternative Name domain
    names (default empty list)
    mockserver.sslSubjectAlternativeNameDomains=www.example.com,www.another.com
    # comma separated list of ip addresses for Subject Alternative Name ips
    (default empty list)
    mockserver.sslSubjectAlternativeNameIps=127.0.0.1
    # CORS
    # enable CORS for MockServer REST API
    mockserver.enableCORSForAPI=true
    # enable CORS for all responses
    mockserver.enableCORSForAllResponses=true
    # Json Initialization
    mockserver.initializationJsonPath=/config/initializerJson.json
